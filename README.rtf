{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Ally Warner\
Assignment 1\
High Performance Computing - CS 6230\
Quick sort Algorithm\
Date: 1/16/2016\
\
\
These scripts will sort arrays of type integer, double, float, long and coordinate points for any array length using quicksort.\
\
./build.sh \'97 builds the script\
\
./test.sh \'97 tests how long it takes for the quicksort algorithm to run with a given datatype and array length. It is currently set to run through all datatypes and at ten 100,000 increments.\
\
./run.sh \'97 tests if the array is correctly sorted.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 C++ Complier: Apple LLVM version 7.0.2 (clang-700. 1. 81)\
\'97This is necessary due to a return call for the function randPoint() \
\'97\'97return \{x,y\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Happy sorting! :) }